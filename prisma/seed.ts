import { PrismaClient } from '../src/generated/prisma'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('ðŸŒ± VeritabanÄ± verilerini oluÅŸturuyor...')

  // Admin kullanÄ±cÄ± oluÅŸtur
  const hashedAdminPassword = await bcrypt.hash('admin123', 10)
  const admin = await prisma.user.create({
    data: {
      email: 'admin@example.com',
      name: 'Admin KullanÄ±cÄ±',
      password: hashedAdminPassword,
      role: 'admin',
      bio: 'Sistem yÃ¶neticisi',
    },
  })

  // Normal kullanÄ±cÄ±lar oluÅŸtur
  const hashedUserPassword = await bcrypt.hash('user123', 10)
  const user1 = await prisma.user.create({
    data: {
      email: 'user1@example.com',
      name: 'Ahmet YÄ±lmaz',
      password: hashedUserPassword,
      bio: 'React Ã¶ÄŸrenmeye meraklÄ± yazÄ±lÄ±mcÄ±',
    },
  })

  const user2 = await prisma.user.create({
    data: {
      email: 'user2@example.com',
      name: 'AyÅŸe Kaya',
      password: hashedUserPassword,
      bio: 'Frontend geliÅŸtirici',
    },
  })

  // Kategoriler oluÅŸtur
  const webDevCategory = await prisma.category.create({
    data: {
      name: 'Web GeliÅŸtirme',
      description: 'Modern web teknolojileri ile uygulama geliÅŸtirme',
      color: '#3B82F6',
    },
  })

  const mobileCategory = await prisma.category.create({
    data: {
      name: 'Mobil GeliÅŸtirme',
      description: 'iOS ve Android uygulama geliÅŸtirme',
      color: '#10B981',
    },
  })

  // Kurslar oluÅŸtur
  const course1 = await prisma.course.create({
    data: {
      title: 'React ile Modern Web GeliÅŸtirme',
      description: 'React, Next.js ve TypeScript ile modern web uygulamalarÄ± geliÅŸtirmeyi Ã¶ÄŸrenin',
      price: 299.99,
      duration: 40,
      level: 'beginner',
      categoryId: webDevCategory.id,
      instructorId: admin.id,
    },
  })

  const course2 = await prisma.course.create({
    data: {
      title: 'Node.js Backend GeliÅŸtirme',
      description: 'Node.js, Express ve MongoDB ile backend API geliÅŸtirme',
      price: 399.99,
      duration: 35,
      level: 'intermediate',
      categoryId: webDevCategory.id,
      instructorId: admin.id,
    },
  })

  // Kurs kayÄ±tlarÄ± oluÅŸtur
  await prisma.enrollment.create({
    data: {
      userId: user1.id,
      courseId: course1.id,
      progress: 25,
    },
  })

  await prisma.enrollment.create({
    data: {
      userId: user2.id,
      courseId: course1.id,
      progress: 50,
    },
  })

  // Ã–rnek mesajlar oluÅŸtur
  await prisma.message.create({
    data: {
      content: 'Merhaba! React kursu hakkÄ±nda bir sorum vardÄ±.',
      senderId: user1.id,
      receiverId: admin.id,
    },
  })

  await prisma.message.create({
    data: {
      content: 'Tabii ki! NasÄ±l yardÄ±mcÄ± olabilirim?',
      senderId: admin.id,
      receiverId: user1.id,
    },
  })

  console.log('âœ… Demo veriler baÅŸarÄ±yla oluÅŸturuldu!')
  console.log('ðŸ‘¤ Admin giriÅŸ bilgileri:')
  console.log('   Email: admin@example.com')
  console.log('   Åžifre: admin123')
  console.log('ðŸ‘¤ KullanÄ±cÄ± giriÅŸ bilgileri:')
  console.log('   Email: user1@example.com')
  console.log('   Åžifre: user123')
}

main()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  }) 